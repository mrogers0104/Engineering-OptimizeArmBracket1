name: .NET 8.0 Deploy

on:
  push:
    branches: [ main, test, dev ]
  pull_request:
    branches: [ main, test, dev ]

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE_PATH: ./OptimizeArmBracket1.sln
  BUILD_CONFIGURATION: Release

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE_PATH }}

    - name: Build
      run: dotnet build ${{ env.SOLUTION_FILE_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

    - name: Publish
      run: dotnet publish ${{ env.SOLUTION_FILE_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --output C:/Publish/OptimizeArmBracket1

    - name: Deploy based on branch
      run: |
        $branch = "${{ github.ref }}"
        $deployPath = ""

        if ($branch -eq "refs/heads/main") {
          $deployPath = "C:\Deployments\Production"
        } elseif ($branch -eq "refs/heads/test") {
          $deployPath = "C:\Deployments\Test"
        } elseif ($branch -eq "refs/heads/dev") {
          $deployPath = "C:\Deployments\Development"
        }

        if ($deployPath -ne "") {
          # Create directory if it doesn't exist
          if (!(Test-Path $deployPath)) {
            New-Item -ItemType Directory -Path $deployPath -Force
          }

          # Copy published files
          Copy-Item -Path "C:\Publish\OptimizeArmBracket1\*" -Destination $deployPath -Recurse -Force

          Write-Host "Deployed to: $deployPath"
        }
      shell: pwsh
